{
    "name": "tailscale",
    "description": "A Pulumi package for creating and managing Tailscale cloud resources.",
    "keywords": [
        "pulumi",
        "tailscale"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`Tailscale` Terraform Provider](https://github.com/tailscale/terraform-provider-Tailscale).",
    "repository": "https://github.com/pulumi/pulumi-tailscale",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-tailscale/sdk/go/tailscale"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Tailscale cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/tailscale/terraform-provider-Tailscale)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-tailscale` repo](https://github.com/pulumi/pulumi-tailscale/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-Tailscale` repo](https://github.com/tailscale/terraform-provider-Tailscale/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/tailscale/terraform-provider-Tailscale)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-tailscale` repo](https://github.com/pulumi/pulumi-tailscale/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-Tailscale` repo](https://github.com/tailscale/terraform-provider-Tailscale/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The API key to use for authenticating requests to the API. Can be set via the TAILSCALE_API_KEY environment variable.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The base URL of the Tailscale API. Defaults to https://api.tailscale.com. Can be set via the TAILSCALE_BASE_URL\nenvironment variable.\n"
            },
            "tailnet": {
                "type": "string",
                "description": "The Tailnet to perform actions in. Can be set via the TAILSCALE_TAILNET environment variable.\n"
            }
        }
    },
    "types": {
        "tailscale:index/getDevicesDevice:getDevicesDevice": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "id",
                "name",
                "tags",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the Tailscale package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "The API key to use for authenticating requests to the API. Can be set via the TAILSCALE_API_KEY environment variable.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The base URL of the Tailscale API. Defaults to https://api.tailscale.com. Can be set via the TAILSCALE_BASE_URL\nenvironment variable.\n"
            },
            "tailnet": {
                "type": "string",
                "description": "The Tailnet to perform actions in. Can be set via the TAILSCALE_TAILNET environment variable.\n"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "The API key to use for authenticating requests to the API. Can be set via the TAILSCALE_API_KEY environment variable.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The base URL of the Tailscale API. Defaults to https://api.tailscale.com. Can be set via the TAILSCALE_BASE_URL\nenvironment variable.\n"
            },
            "tailnet": {
                "type": "string",
                "description": "The Tailnet to perform actions in. Can be set via the TAILSCALE_TAILNET environment variable.\n"
            }
        }
    },
    "resources": {
        "tailscale:index/acl:Acl": {
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "The JSON-based policy that defines which devices and users are allowed to connect in your network\n",
                    "language": {
                        "csharp": {
                            "name": "AclJson"
                        }
                    }
                }
            },
            "required": [
                "acl"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string",
                    "description": "The JSON-based policy that defines which devices and users are allowed to connect in your network\n",
                    "language": {
                        "csharp": {
                            "name": "AclJson"
                        }
                    }
                }
            },
            "requiredInputs": [
                "acl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Acl resources.\n",
                "properties": {
                    "acl": {
                        "type": "string",
                        "description": "The JSON-based policy that defines which devices and users are allowed to connect in your network\n",
                        "language": {
                            "csharp": {
                                "name": "AclJson"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceAuthorization:DeviceAuthorization": {
            "properties": {
                "authorized": {
                    "type": "boolean",
                    "description": "Whether or not the device is authorized\n"
                },
                "deviceId": {
                    "type": "string",
                    "description": "The device to set as authorized\n"
                }
            },
            "required": [
                "authorized",
                "deviceId"
            ],
            "inputProperties": {
                "authorized": {
                    "type": "boolean",
                    "description": "Whether or not the device is authorized\n"
                },
                "deviceId": {
                    "type": "string",
                    "description": "The device to set as authorized\n"
                }
            },
            "requiredInputs": [
                "authorized",
                "deviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAuthorization resources.\n",
                "properties": {
                    "authorized": {
                        "type": "boolean",
                        "description": "Whether or not the device is authorized\n"
                    },
                    "deviceId": {
                        "type": "string",
                        "description": "The device to set as authorized\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceKey:DeviceKey": {
            "properties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to update the key properties of\n"
                },
                "keyExpiryDisabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the device's key will expire\n"
                }
            },
            "required": [
                "deviceId"
            ],
            "inputProperties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to update the key properties of\n"
                },
                "keyExpiryDisabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the device's key will expire\n"
                }
            },
            "requiredInputs": [
                "deviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceKey resources.\n",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "description": "The device to update the key properties of\n"
                    },
                    "keyExpiryDisabled": {
                        "type": "boolean",
                        "description": "Determines whether or not the device's key will expire\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceSubnetRoutes:DeviceSubnetRoutes": {
            "properties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to set subnet routes for\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet routes that are enabled to be routed by a device\n"
                }
            },
            "required": [
                "deviceId",
                "routes"
            ],
            "inputProperties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to set subnet routes for\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet routes that are enabled to be routed by a device\n"
                }
            },
            "requiredInputs": [
                "deviceId",
                "routes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceSubnetRoutes resources.\n",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "description": "The device to set subnet routes for\n"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The subnet routes that are enabled to be routed by a device\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceTags:DeviceTags": {
            "properties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to set tags for\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags to apply to the device\n"
                }
            },
            "required": [
                "deviceId",
                "tags"
            ],
            "inputProperties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to set tags for\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags to apply to the device\n"
                }
            },
            "requiredInputs": [
                "deviceId",
                "tags"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceTags resources.\n",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "description": "The device to set tags for\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags to apply to the device\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/dnsNameservers:DnsNameservers": {
            "properties": {
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 addresses are accepted.\n"
                }
            },
            "required": [
                "nameservers"
            ],
            "inputProperties": {
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 addresses are accepted.\n"
                }
            },
            "requiredInputs": [
                "nameservers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsNameservers resources.\n",
                "properties": {
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 addresses are accepted.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/dnsPreferences:DnsPreferences": {
            "properties": {
                "magicDns": {
                    "type": "boolean",
                    "description": "Whether or not to enable magic DNS\n"
                }
            },
            "required": [
                "magicDns"
            ],
            "inputProperties": {
                "magicDns": {
                    "type": "boolean",
                    "description": "Whether or not to enable magic DNS\n"
                }
            },
            "requiredInputs": [
                "magicDns"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsPreferences resources.\n",
                "properties": {
                    "magicDns": {
                        "type": "boolean",
                        "description": "Whether or not to enable magic DNS\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/dnsSearchPaths:DnsSearchPaths": {
            "properties": {
                "searchPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these domain suffixes to resolve DNS names.\n"
                }
            },
            "required": [
                "searchPaths"
            ],
            "inputProperties": {
                "searchPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these domain suffixes to resolve DNS names.\n"
                }
            },
            "requiredInputs": [
                "searchPaths"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsSearchPaths resources.\n",
                "properties": {
                    "searchPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices on your network will use these domain suffixes to resolve DNS names.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/tailnetKey:TailnetKey": {
            "properties": {
                "ephemeral": {
                    "type": "boolean",
                    "description": "Indicates if the key is ephemeral.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The authentication key\n"
                },
                "preauthorized": {
                    "type": "boolean",
                    "description": "Determines whether or not the machines authenticated by the key will be authorized for the tailnet by default.\n"
                },
                "reusable": {
                    "type": "boolean",
                    "description": "Indicates if the key is reusable or single-use.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags to apply to the machines authenticated by the key.\n"
                }
            },
            "required": [
                "key"
            ],
            "inputProperties": {
                "ephemeral": {
                    "type": "boolean",
                    "description": "Indicates if the key is ephemeral.\n",
                    "willReplaceOnChanges": true
                },
                "preauthorized": {
                    "type": "boolean",
                    "description": "Determines whether or not the machines authenticated by the key will be authorized for the tailnet by default.\n",
                    "willReplaceOnChanges": true
                },
                "reusable": {
                    "type": "boolean",
                    "description": "Indicates if the key is reusable or single-use.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags to apply to the machines authenticated by the key.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TailnetKey resources.\n",
                "properties": {
                    "ephemeral": {
                        "type": "boolean",
                        "description": "Indicates if the key is ephemeral.\n",
                        "willReplaceOnChanges": true
                    },
                    "key": {
                        "type": "string",
                        "description": "The authentication key\n"
                    },
                    "preauthorized": {
                        "type": "boolean",
                        "description": "Determines whether or not the machines authenticated by the key will be authorized for the tailnet by default.\n",
                        "willReplaceOnChanges": true
                    },
                    "reusable": {
                        "type": "boolean",
                        "description": "Indicates if the key is reusable or single-use.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to apply to the machines authenticated by the key.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "tailscale:index/get4Via6:get4Via6": {
            "inputs": {
                "description": "A collection of arguments for invoking get4Via6.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "site": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "cidr",
                    "site"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by get4Via6.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipv6": {
                        "type": "string"
                    },
                    "site": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "cidr",
                    "ipv6",
                    "site",
                    "id"
                ]
            }
        },
        "tailscale:index/getDevice:getDevice": {
            "inputs": {
                "description": "A collection of arguments for invoking getDevice.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "waitFor": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDevice.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user": {
                        "type": "string"
                    },
                    "waitFor": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addresses",
                    "name",
                    "tags",
                    "user",
                    "id"
                ]
            }
        },
        "tailscale:index/getDevices:getDevices": {
            "inputs": {
                "description": "A collection of arguments for invoking getDevices.\n",
                "properties": {
                    "namePrefix": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDevices.\n",
                "properties": {
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/tailscale:index/getDevicesDevice:getDevicesDevice"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "namePrefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "devices",
                    "id"
                ]
            }
        }
    }
}