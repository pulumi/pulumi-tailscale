{
    "name": "tailscale",
    "description": "A Pulumi package for creating and managing xyz cloud resources.",
    "keywords": [
        "pulumi",
        "tailscale"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`tailscale` Terraform Provider](https://github.com/davidsbond/terraform-provider-tailscale).",
    "repository": "https://github.com/pulumi/pulumi-tailscale",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string"
            },
            "baseUrl": {
                "type": "string"
            },
            "tailnet": {
                "type": "string"
            }
        },
        "defaults": [
            "apiKey",
            "tailnet"
        ]
    },
    "types": {
        "tailscale:index/getDevicesDevice:getDevicesDevice": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tailscale IPs for the device\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the device\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the device\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags applied to the device\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "The user associated with the device\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "id",
                "name",
                "tags",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the tailscale package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string"
            },
            "baseUrl": {
                "type": "string"
            },
            "tailnet": {
                "type": "string"
            }
        },
        "required": [
            "apiKey",
            "tailnet"
        ],
        "inputProperties": {
            "apiKey": {
                "type": "string"
            },
            "baseUrl": {
                "type": "string"
            },
            "tailnet": {
                "type": "string"
            }
        },
        "requiredInputs": [
            "apiKey",
            "tailnet"
        ]
    },
    "resources": {
        "tailscale:index/acl:Acl": {
            "description": "The acl resource allows you to configure a Tailscale ACL. See the [Tailscale ACL documentation](https://tailscale.com/kb/1018/acls)\nfor more information. You can set the ACL in multiple ways including hujson.\n",
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "The JSON-based policy that defines which devices and users are allowed to connect in your network.\nThis can be JSON or HuJSON. Comments will not be provided when sent to the Tailscale API, they were only appear in your\nlocal ACL file.\n",
                    "language": {
                        "csharp": {
                            "name": "AclJson"
                        }
                    }
                }
            },
            "required": [
                "acl"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string",
                    "description": "The JSON-based policy that defines which devices and users are allowed to connect in your network.\nThis can be JSON or HuJSON. Comments will not be provided when sent to the Tailscale API, they were only appear in your\nlocal ACL file.\n",
                    "language": {
                        "csharp": {
                            "name": "AclJson"
                        }
                    }
                }
            },
            "requiredInputs": [
                "acl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Acl resources.\n",
                "properties": {
                    "acl": {
                        "type": "string",
                        "description": "The JSON-based policy that defines which devices and users are allowed to connect in your network.\nThis can be JSON or HuJSON. Comments will not be provided when sent to the Tailscale API, they were only appear in your\nlocal ACL file.\n",
                        "language": {
                            "csharp": {
                                "name": "AclJson"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceAuthorization:DeviceAuthorization": {
            "description": "The device_authorization resource is used to approve new devices before they can join the tailnet.\nSee the [Tailscale device authorization documentation](https://tailscale.com/kb/1099/device-authorization) for more\ninformation.\n\nThe Tailscale API currently only supports authorizing devices, but not rejecting/removing them. Once a device is\nauthorized by this provider it cannot be modified again afterwards. Modifying or deleting the resource\nwill not affect the device's authorization within the tailnet.\n",
            "properties": {
                "authorized": {
                    "type": "boolean",
                    "description": "Indicates if the device is allowed to join the tailnet.\n"
                },
                "deviceId": {
                    "type": "string",
                    "description": "The device to authorize.\n"
                }
            },
            "required": [
                "authorized",
                "deviceId"
            ],
            "inputProperties": {
                "authorized": {
                    "type": "boolean",
                    "description": "Indicates if the device is allowed to join the tailnet.\n"
                },
                "deviceId": {
                    "type": "string",
                    "description": "The device to authorize.\n"
                }
            },
            "requiredInputs": [
                "authorized",
                "deviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAuthorization resources.\n",
                "properties": {
                    "authorized": {
                        "type": "boolean",
                        "description": "Indicates if the device is allowed to join the tailnet.\n"
                    },
                    "deviceId": {
                        "type": "string",
                        "description": "The device to authorize.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceKey:DeviceKey": {
            "description": "The `device_key` resource allows you to modify the property of a device's key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst exampleDevice = tailscale.getDevice({\n    name: \"device.example.com\",\n});\nconst exampleKey = new tailscale.DeviceKey(\"exampleKey\", {\n    deviceId: exampleDevice.then(exampleDevice =\u003e exampleDevice.id),\n    preauthorized: true,\n    keyExpiryDisabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nexample_device = tailscale.get_device(name=\"device.example.com\")\nexample_key = tailscale.DeviceKey(\"exampleKey\",\n    device_id=example_device.id,\n    preauthorized=True,\n    key_expiry_disabled=True)\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleDevice = Output.Create(Tailscale.GetDevice.InvokeAsync(new Tailscale.GetDeviceArgs\n        {\n            Name = \"device.example.com\",\n        }));\n        var exampleKey = new Tailscale.DeviceKey(\"exampleKey\", new Tailscale.DeviceKeyArgs\n        {\n            DeviceId = exampleDevice.Apply(exampleDevice =\u003e exampleDevice.Id),\n            Preauthorized = true,\n            KeyExpiryDisabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleDevice, err := tailscale.GetDevice(ctx, \u0026GetDeviceArgs{\n\t\t\tName: \"device.example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = tailscale.NewDeviceKey(ctx, \"exampleKey\", \u0026tailscale.DeviceKeyArgs{\n\t\t\tDeviceId:          pulumi.String(exampleDevice.Id),\n\t\t\tPreauthorized:     pulumi.Bool(true),\n\t\t\tKeyExpiryDisabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to change the key properties of.\n"
                },
                "keyExpiryDisabled": {
                    "type": "boolean",
                    "description": "Whether the device's key will ever expire.\n"
                },
                "preauthorized": {
                    "type": "boolean",
                    "description": "Whether the device should be authorized for the tailnet by default, works in tailnets \nwhere device authorization is enabled.\n"
                }
            },
            "required": [
                "deviceId"
            ],
            "inputProperties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to change the key properties of.\n"
                },
                "keyExpiryDisabled": {
                    "type": "boolean",
                    "description": "Whether the device's key will ever expire.\n"
                },
                "preauthorized": {
                    "type": "boolean",
                    "description": "Whether the device should be authorized for the tailnet by default, works in tailnets \nwhere device authorization is enabled.\n"
                }
            },
            "requiredInputs": [
                "deviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceKey resources.\n",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "description": "The device to change the key properties of.\n"
                    },
                    "keyExpiryDisabled": {
                        "type": "boolean",
                        "description": "Whether the device's key will ever expire.\n"
                    },
                    "preauthorized": {
                        "type": "boolean",
                        "description": "Whether the device should be authorized for the tailnet by default, works in tailnets \nwhere device authorization is enabled.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceSubnetRoutes:DeviceSubnetRoutes": {
            "description": "The device_subnet_routes resource allows you to configure subnet routes for your Tailscale devices. See the\n[Tailscale subnets documentation](https://tailscale.com/kb/1019/subnets) for more information.\n",
            "properties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to change enabled subroutes for.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet routes that are enabled to be routed by a device. Routes can be enabled without a \ndevice advertising them (e.g. for preauth).\n"
                }
            },
            "required": [
                "deviceId",
                "routes"
            ],
            "inputProperties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to change enabled subroutes for.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet routes that are enabled to be routed by a device. Routes can be enabled without a \ndevice advertising them (e.g. for preauth).\n"
                }
            },
            "requiredInputs": [
                "deviceId",
                "routes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceSubnetRoutes resources.\n",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "description": "The device to change enabled subroutes for.\n"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The subnet routes that are enabled to be routed by a device. Routes can be enabled without a \ndevice advertising them (e.g. for preauth).\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/deviceTags:DeviceTags": {
            "description": "The device_tags resource is used to apply tags to a device within a Tailnet. For more information on ACL tags, see\nthe [ACL tags documentation](https://tailscale.com/kb/1068/acl-tags/) for more details.\n",
            "properties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to apply tags to.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags to apply to the device.\n"
                }
            },
            "required": [
                "deviceId",
                "tags"
            ],
            "inputProperties": {
                "deviceId": {
                    "type": "string",
                    "description": "The device to apply tags to.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags to apply to the device.\n"
                }
            },
            "requiredInputs": [
                "deviceId",
                "tags"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceTags resources.\n",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "description": "The device to apply tags to.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags to apply to the device.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/dnsNameservers:DnsNameservers": {
            "description": "The dns_nameservers resource allows you to configure DNS nameservers for your Tailscale network. See the\n[Tailscale DNS documentation](https://tailscale.com/kb/1054/dns) for more information.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst sampleNameservers = new tailscale.DnsNameservers(\"sample_nameservers\", {\n    nameservers: [\n        \"8.8.8.8\",\n        \"8.8.4.4\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nsample_nameservers = tailscale.DnsNameservers(\"sampleNameservers\", nameservers=[\n    \"8.8.8.8\",\n    \"8.8.4.4\",\n])\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleNameservers = new Tailscale.DnsNameservers(\"sampleNameservers\", new Tailscale.DnsNameserversArgs\n        {\n            Nameservers = \n            {\n                \"8.8.8.8\",\n                \"8.8.4.4\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := tailscale.NewDnsNameservers(ctx, \"sampleNameservers\", \u0026tailscale.DnsNameserversArgs{\n\t\t\tNameservers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"8.8.8.8\"),\n\t\t\t\tpulumi.String(\"8.8.4.4\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 \naddresses are accepted.\n"
                }
            },
            "required": [
                "nameservers"
            ],
            "inputProperties": {
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 \naddresses are accepted.\n"
                }
            },
            "requiredInputs": [
                "nameservers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsNameservers resources.\n",
                "properties": {
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 \naddresses are accepted.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/dnsPreferences:DnsPreferences": {
            "description": "The dns_preferences resource allows you to configure DNS preferences for your Tailscale network. See the\n[Tailscale DNS documentation](https://tailscale.com/kb/1054/dns) for more information.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst samplePreferences = new tailscale.DnsPreferences(\"sample_preferences\", {\n    magicDns: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nsample_preferences = tailscale.DnsPreferences(\"samplePreferences\", magic_dns=True)\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var samplePreferences = new Tailscale.DnsPreferences(\"samplePreferences\", new Tailscale.DnsPreferencesArgs\n        {\n            MagicDns = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := tailscale.NewDnsPreferences(ctx, \"samplePreferences\", \u0026tailscale.DnsPreferencesArgs{\n\t\t\tMagicDns: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "magicDns": {
                    "type": "boolean",
                    "description": "Enables or disables MagicDNS, automatically registers DNS names for devices on your network.\nAt least one DNS server must be set before enabling Magic DNS.\n"
                }
            },
            "required": [
                "magicDns"
            ],
            "inputProperties": {
                "magicDns": {
                    "type": "boolean",
                    "description": "Enables or disables MagicDNS, automatically registers DNS names for devices on your network.\nAt least one DNS server must be set before enabling Magic DNS.\n"
                }
            },
            "requiredInputs": [
                "magicDns"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsPreferences resources.\n",
                "properties": {
                    "magicDns": {
                        "type": "boolean",
                        "description": "Enables or disables MagicDNS, automatically registers DNS names for devices on your network.\nAt least one DNS server must be set before enabling Magic DNS.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/dnsSearchPaths:DnsSearchPaths": {
            "description": "The search_paths resource allows you to configure DNS search paths for your Tailscale network. See the\n[Tailscale DNS documentation](https://tailscale.com/kb/1054/dns) for more information.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst sampleSearchPaths = new tailscale.DnsSearchPaths(\"sample_search_paths\", {\n    searchPaths: [\"example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nsample_search_paths = tailscale.DnsSearchPaths(\"sampleSearchPaths\", search_paths=[\"example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleSearchPaths = new Tailscale.DnsSearchPaths(\"sampleSearchPaths\", new Tailscale.DnsSearchPathsArgs\n        {\n            SearchPaths = \n            {\n                \"example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := tailscale.NewDnsSearchPaths(ctx, \"sampleSearchPaths\", \u0026tailscale.DnsSearchPathsArgs{\n\t\t\tSearchPaths: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "searchPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these domain suffixes to resolve DNS names.\n"
                }
            },
            "required": [
                "searchPaths"
            ],
            "inputProperties": {
                "searchPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices on your network will use these domain suffixes to resolve DNS names.\n"
                }
            },
            "requiredInputs": [
                "searchPaths"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsSearchPaths resources.\n",
                "properties": {
                    "searchPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices on your network will use these domain suffixes to resolve DNS names.\n"
                    }
                },
                "type": "object"
            }
        },
        "tailscale:index/tailnetKey:TailnetKey": {
            "description": "The `tailnet_key` resource allows you to generate pre-authentication keys for your tailnet. See the\n[Tailscale auth keys](https://tailscale.com/kb/1085/auth-keys/) documentation for more information\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst sampleKey = new tailscale.TailnetKey(\"sample_key\", {\n    ephemeral: false,\n    reusable: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nsample_key = tailscale.TailnetKey(\"sampleKey\",\n    ephemeral=False,\n    reusable=True)\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleKey = new Tailscale.TailnetKey(\"sampleKey\", new Tailscale.TailnetKeyArgs\n        {\n            Ephemeral = false,\n            Reusable = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := tailscale.NewTailnetKey(ctx, \"sampleKey\", \u0026tailscale.TailnetKeyArgs{\n\t\t\tEphemeral: pulumi.Bool(false),\n\t\t\tReusable:  pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "ephemeral": {
                    "type": "boolean",
                    "description": "Determines if the generated key is ephemeral. Ephemeral keys are used for authenticating\nephemeral nodes for short-lived workloads.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The generated authentication key.\n"
                },
                "reusable": {
                    "type": "boolean",
                    "description": "Determines if the generated key is reusable. Reusable keys can be used to connect multiple\nnodes. For example, multiple instances of on-prem database might use a reusable key to connect.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of tags to apply to the machines authenticated by the key. These tags can be used in ACL\nrules, see the [Tailscale ACL tag documentation](https://tailscale.com/kb/1068/acl-tags/).\n"
                }
            },
            "required": [
                "key"
            ],
            "inputProperties": {
                "ephemeral": {
                    "type": "boolean",
                    "description": "Determines if the generated key is ephemeral. Ephemeral keys are used for authenticating\nephemeral nodes for short-lived workloads.\n"
                },
                "reusable": {
                    "type": "boolean",
                    "description": "Determines if the generated key is reusable. Reusable keys can be used to connect multiple\nnodes. For example, multiple instances of on-prem database might use a reusable key to connect.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of tags to apply to the machines authenticated by the key. These tags can be used in ACL\nrules, see the [Tailscale ACL tag documentation](https://tailscale.com/kb/1068/acl-tags/).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TailnetKey resources.\n",
                "properties": {
                    "ephemeral": {
                        "type": "boolean",
                        "description": "Determines if the generated key is ephemeral. Ephemeral keys are used for authenticating\nephemeral nodes for short-lived workloads.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The generated authentication key.\n"
                    },
                    "reusable": {
                        "type": "boolean",
                        "description": "Determines if the generated key is reusable. Reusable keys can be used to connect multiple\nnodes. For example, multiple instances of on-prem database might use a reusable key to connect.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of tags to apply to the machines authenticated by the key. These tags can be used in ACL\nrules, see the [Tailscale ACL tag documentation](https://tailscale.com/kb/1068/acl-tags/).\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "tailscale:index/getDevice:getDevice": {
            "description": "The device data source describes a single device in a tailnet.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst sampleDevice = pulumi.output(tailscale.getDevice({\n    name: \"user1-device.example.com\",\n    waitFor: \"60s\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nsample_device = tailscale.get_device(name=\"user1-device.example.com\",\n    wait_for=\"60s\")\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleDevice = Output.Create(Tailscale.GetDevice.InvokeAsync(new Tailscale.GetDeviceArgs\n        {\n            Name = \"user1-device.example.com\",\n            WaitFor = \"60s\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := tailscale.GetDevice(ctx, \u0026GetDeviceArgs{\n\t\t\tName:    \"user1-device.example.com\",\n\t\t\tWaitFor: pulumi.StringRef(\"60s\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDevice.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the tailnet device to obtain the attributes of.\n"
                    },
                    "waitFor": {
                        "type": "string",
                        "description": "If specified, the provider will retry obtaining the device data every second until the specified duration has been reached. Must be a value greater than 1 second\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDevice.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tailscale IPs for the device\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags applied to the device\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "The user associated with the device\n"
                    },
                    "waitFor": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addresses",
                    "name",
                    "tags",
                    "user",
                    "id"
                ]
            }
        },
        "tailscale:index/getDevices:getDevices": {
            "description": "The devices data source describes a list of devices in a tailnet.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tailscale from \"@pulumi/tailscale\";\n\nconst sampleDevices = pulumi.output(tailscale.getDevices({\n    namePrefix: \"example-\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_tailscale as tailscale\n\nsample_devices = tailscale.get_devices(name_prefix=\"example-\")\n```\n```csharp\nusing Pulumi;\nusing Tailscale = Pulumi.Tailscale;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleDevices = Output.Create(Tailscale.GetDevices.InvokeAsync(new Tailscale.GetDevicesArgs\n        {\n            NamePrefix = \"example-\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := tailscale.GetDevices(ctx, \u0026GetDevicesArgs{\n\t\t\tNamePrefix: pulumi.StringRef(\"example-\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDevices.\n",
                "properties": {
                    "namePrefix": {
                        "type": "string",
                        "description": "Filters the returned list of devices to those whose name have this prefix.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDevices.\n",
                "properties": {
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/tailscale:index/getDevicesDevice:getDevicesDevice"
                        },
                        "description": "The list of devices returned from the Tailscale API. Each element contains the following:\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "namePrefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "devices",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-tailscale/sdk/go/tailscale"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing xyz cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/davidsbond/terraform-provider-tailscale)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-tailscale` repo](https://github.com/pulumi/pulumi-tailscale/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`davidsbond/terraform-provider-tailscale` repo](https://github.com/davidsbond/terraform-provider-tailscale/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/davidsbond/terraform-provider-tailscale)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-tailscale` repo](https://github.com/pulumi/pulumi-tailscale/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`davidsbond/terraform-provider-tailscale` repo](https://github.com/davidsbond/terraform-provider-tailscale/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}