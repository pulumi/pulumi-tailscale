// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tailscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The postureIntegration resource allows you to manage integrations with device posture data providers. See https://tailscale.com/kb/1288/device-posture for more information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tailscale/sdk/go/tailscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tailscale.NewPostureIntegration(ctx, "sample_posture_integration", &tailscale.PostureIntegrationArgs{
//				PostureProvider: pulumi.String("falcon"),
//				CloudId:         pulumi.String("us-1"),
//				ClientId:        pulumi.String("clientid1"),
//				ClientSecret:    pulumi.String("test-secret1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Posture integration can be imported using the posture integration id, e.g.,
//
// ```sh
// $ pulumi import tailscale:index/postureIntegration:PostureIntegration sample_posture_integration 123456789
// ```
type PostureIntegration struct {
	pulumi.CustomResourceState

	// Unique identifier for your client.
	ClientId pulumi.StringPtrOutput `pulumi:"clientId"`
	// The secret (auth key, token, etc.) used to authenticate with the provider.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Identifies which of the provider's clouds to integrate with.
	CloudId pulumi.StringPtrOutput `pulumi:"cloudId"`
	// The type of posture integration data provider.
	PostureProvider pulumi.StringOutput `pulumi:"postureProvider"`
	// The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
}

// NewPostureIntegration registers a new resource with the given unique name, arguments, and options.
func NewPostureIntegration(ctx *pulumi.Context,
	name string, args *PostureIntegrationArgs, opts ...pulumi.ResourceOption) (*PostureIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.PostureProvider == nil {
		return nil, errors.New("invalid value for required argument 'PostureProvider'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PostureIntegration
	err := ctx.RegisterResource("tailscale:index/postureIntegration:PostureIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPostureIntegration gets an existing PostureIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPostureIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PostureIntegrationState, opts ...pulumi.ResourceOption) (*PostureIntegration, error) {
	var resource PostureIntegration
	err := ctx.ReadResource("tailscale:index/postureIntegration:PostureIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PostureIntegration resources.
type postureIntegrationState struct {
	// Unique identifier for your client.
	ClientId *string `pulumi:"clientId"`
	// The secret (auth key, token, etc.) used to authenticate with the provider.
	ClientSecret *string `pulumi:"clientSecret"`
	// Identifies which of the provider's clouds to integrate with.
	CloudId *string `pulumi:"cloudId"`
	// The type of posture integration data provider.
	PostureProvider *string `pulumi:"postureProvider"`
	// The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
	TenantId *string `pulumi:"tenantId"`
}

type PostureIntegrationState struct {
	// Unique identifier for your client.
	ClientId pulumi.StringPtrInput
	// The secret (auth key, token, etc.) used to authenticate with the provider.
	ClientSecret pulumi.StringPtrInput
	// Identifies which of the provider's clouds to integrate with.
	CloudId pulumi.StringPtrInput
	// The type of posture integration data provider.
	PostureProvider pulumi.StringPtrInput
	// The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
	TenantId pulumi.StringPtrInput
}

func (PostureIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*postureIntegrationState)(nil)).Elem()
}

type postureIntegrationArgs struct {
	// Unique identifier for your client.
	ClientId *string `pulumi:"clientId"`
	// The secret (auth key, token, etc.) used to authenticate with the provider.
	ClientSecret string `pulumi:"clientSecret"`
	// Identifies which of the provider's clouds to integrate with.
	CloudId *string `pulumi:"cloudId"`
	// The type of posture integration data provider.
	PostureProvider string `pulumi:"postureProvider"`
	// The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a PostureIntegration resource.
type PostureIntegrationArgs struct {
	// Unique identifier for your client.
	ClientId pulumi.StringPtrInput
	// The secret (auth key, token, etc.) used to authenticate with the provider.
	ClientSecret pulumi.StringInput
	// Identifies which of the provider's clouds to integrate with.
	CloudId pulumi.StringPtrInput
	// The type of posture integration data provider.
	PostureProvider pulumi.StringInput
	// The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
	TenantId pulumi.StringPtrInput
}

func (PostureIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*postureIntegrationArgs)(nil)).Elem()
}

type PostureIntegrationInput interface {
	pulumi.Input

	ToPostureIntegrationOutput() PostureIntegrationOutput
	ToPostureIntegrationOutputWithContext(ctx context.Context) PostureIntegrationOutput
}

func (*PostureIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**PostureIntegration)(nil)).Elem()
}

func (i *PostureIntegration) ToPostureIntegrationOutput() PostureIntegrationOutput {
	return i.ToPostureIntegrationOutputWithContext(context.Background())
}

func (i *PostureIntegration) ToPostureIntegrationOutputWithContext(ctx context.Context) PostureIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostureIntegrationOutput)
}

// PostureIntegrationArrayInput is an input type that accepts PostureIntegrationArray and PostureIntegrationArrayOutput values.
// You can construct a concrete instance of `PostureIntegrationArrayInput` via:
//
//	PostureIntegrationArray{ PostureIntegrationArgs{...} }
type PostureIntegrationArrayInput interface {
	pulumi.Input

	ToPostureIntegrationArrayOutput() PostureIntegrationArrayOutput
	ToPostureIntegrationArrayOutputWithContext(context.Context) PostureIntegrationArrayOutput
}

type PostureIntegrationArray []PostureIntegrationInput

func (PostureIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PostureIntegration)(nil)).Elem()
}

func (i PostureIntegrationArray) ToPostureIntegrationArrayOutput() PostureIntegrationArrayOutput {
	return i.ToPostureIntegrationArrayOutputWithContext(context.Background())
}

func (i PostureIntegrationArray) ToPostureIntegrationArrayOutputWithContext(ctx context.Context) PostureIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostureIntegrationArrayOutput)
}

// PostureIntegrationMapInput is an input type that accepts PostureIntegrationMap and PostureIntegrationMapOutput values.
// You can construct a concrete instance of `PostureIntegrationMapInput` via:
//
//	PostureIntegrationMap{ "key": PostureIntegrationArgs{...} }
type PostureIntegrationMapInput interface {
	pulumi.Input

	ToPostureIntegrationMapOutput() PostureIntegrationMapOutput
	ToPostureIntegrationMapOutputWithContext(context.Context) PostureIntegrationMapOutput
}

type PostureIntegrationMap map[string]PostureIntegrationInput

func (PostureIntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PostureIntegration)(nil)).Elem()
}

func (i PostureIntegrationMap) ToPostureIntegrationMapOutput() PostureIntegrationMapOutput {
	return i.ToPostureIntegrationMapOutputWithContext(context.Background())
}

func (i PostureIntegrationMap) ToPostureIntegrationMapOutputWithContext(ctx context.Context) PostureIntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostureIntegrationMapOutput)
}

type PostureIntegrationOutput struct{ *pulumi.OutputState }

func (PostureIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostureIntegration)(nil)).Elem()
}

func (o PostureIntegrationOutput) ToPostureIntegrationOutput() PostureIntegrationOutput {
	return o
}

func (o PostureIntegrationOutput) ToPostureIntegrationOutputWithContext(ctx context.Context) PostureIntegrationOutput {
	return o
}

// Unique identifier for your client.
func (o PostureIntegrationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostureIntegration) pulumi.StringPtrOutput { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The secret (auth key, token, etc.) used to authenticate with the provider.
func (o PostureIntegrationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *PostureIntegration) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Identifies which of the provider's clouds to integrate with.
func (o PostureIntegrationOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostureIntegration) pulumi.StringPtrOutput { return v.CloudId }).(pulumi.StringPtrOutput)
}

// The type of posture integration data provider.
func (o PostureIntegrationOutput) PostureProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *PostureIntegration) pulumi.StringOutput { return v.PostureProvider }).(pulumi.StringOutput)
}

// The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
func (o PostureIntegrationOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostureIntegration) pulumi.StringPtrOutput { return v.TenantId }).(pulumi.StringPtrOutput)
}

type PostureIntegrationArrayOutput struct{ *pulumi.OutputState }

func (PostureIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PostureIntegration)(nil)).Elem()
}

func (o PostureIntegrationArrayOutput) ToPostureIntegrationArrayOutput() PostureIntegrationArrayOutput {
	return o
}

func (o PostureIntegrationArrayOutput) ToPostureIntegrationArrayOutputWithContext(ctx context.Context) PostureIntegrationArrayOutput {
	return o
}

func (o PostureIntegrationArrayOutput) Index(i pulumi.IntInput) PostureIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PostureIntegration {
		return vs[0].([]*PostureIntegration)[vs[1].(int)]
	}).(PostureIntegrationOutput)
}

type PostureIntegrationMapOutput struct{ *pulumi.OutputState }

func (PostureIntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PostureIntegration)(nil)).Elem()
}

func (o PostureIntegrationMapOutput) ToPostureIntegrationMapOutput() PostureIntegrationMapOutput {
	return o
}

func (o PostureIntegrationMapOutput) ToPostureIntegrationMapOutputWithContext(ctx context.Context) PostureIntegrationMapOutput {
	return o
}

func (o PostureIntegrationMapOutput) MapIndex(k pulumi.StringInput) PostureIntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PostureIntegration {
		return vs[0].(map[string]*PostureIntegration)[vs[1].(string)]
	}).(PostureIntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PostureIntegrationInput)(nil)).Elem(), &PostureIntegration{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostureIntegrationArrayInput)(nil)).Elem(), PostureIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostureIntegrationMapInput)(nil)).Elem(), PostureIntegrationMap{})
	pulumi.RegisterOutputType(PostureIntegrationOutput{})
	pulumi.RegisterOutputType(PostureIntegrationArrayOutput{})
	pulumi.RegisterOutputType(PostureIntegrationMapOutput{})
}
