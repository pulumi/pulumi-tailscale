# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAclResult',
    'AwaitableGetAclResult',
    'get_acl',
    'get_acl_output',
]

@pulumi.output_type
class GetAclResult:
    """
    A collection of values returned by getAcl.
    """
    def __init__(__self__, hujson=None, id=None, json=None):
        if hujson and not isinstance(hujson, str):
            raise TypeError("Expected argument 'hujson' to be a str")
        pulumi.set(__self__, "hujson", hujson)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)

    @property
    @pulumi.getter
    def hujson(self) -> str:
        """
        The contents of Tailscale ACL as a HuJSON string
        """
        return pulumi.get(self, "hujson")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        """
        The contents of Tailscale ACL as a JSON string
        """
        return pulumi.get(self, "json")


class AwaitableGetAclResult(GetAclResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAclResult(
            hujson=self.hujson,
            id=self.id,
            json=self.json)


def get_acl(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAclResult:
    """
    The acl data source gets the Tailscale ACL for a tailnet
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tailscale:index/getAcl:getAcl', __args__, opts=opts, typ=GetAclResult).value

    return AwaitableGetAclResult(
        hujson=pulumi.get(__ret__, 'hujson'),
        id=pulumi.get(__ret__, 'id'),
        json=pulumi.get(__ret__, 'json'))


@_utilities.lift_output_func(get_acl)
def get_acl_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAclResult]:
    """
    The acl data source gets the Tailscale ACL for a tailnet
    """
    ...
