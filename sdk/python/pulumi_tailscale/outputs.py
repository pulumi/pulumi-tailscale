# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'ContactsAccount',
    'ContactsSecurity',
    'ContactsSupport',
    'GetDevicesDeviceResult',
    'GetUsersUserResult',
]

@pulumi.output_type
class ContactsAccount(dict):
    def __init__(__self__, *,
                 email: _builtins.str):
        """
        :param _builtins.str email: Email address to send communications to
        """
        pulumi.set(__self__, "email", email)

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        Email address to send communications to
        """
        return pulumi.get(self, "email")


@pulumi.output_type
class ContactsSecurity(dict):
    def __init__(__self__, *,
                 email: _builtins.str):
        """
        :param _builtins.str email: Email address to send communications to
        """
        pulumi.set(__self__, "email", email)

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        Email address to send communications to
        """
        return pulumi.get(self, "email")


@pulumi.output_type
class ContactsSupport(dict):
    def __init__(__self__, *,
                 email: _builtins.str):
        """
        :param _builtins.str email: Email address to send communications to
        """
        pulumi.set(__self__, "email", email)

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        Email address to send communications to
        """
        return pulumi.get(self, "email")


@pulumi.output_type
class GetDevicesDeviceResult(dict):
    def __init__(__self__, *,
                 addresses: Sequence[_builtins.str],
                 hostname: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 node_id: _builtins.str,
                 tags: Sequence[_builtins.str],
                 user: _builtins.str):
        """
        :param Sequence[_builtins.str] addresses: The list of device's IPs
        :param _builtins.str hostname: The short hostname of the device
        :param _builtins.str id: The legacy identifier of the device. Use node_id instead for new resources.
        :param _builtins.str name: The full name of the device (e.g. `hostname.domain.ts.net`)
        :param _builtins.str node_id: The preferred indentifier for a device.
        :param Sequence[_builtins.str] tags: The tags applied to the device
        :param _builtins.str user: The user associated with the device
        """
        pulumi.set(__self__, "addresses", addresses)
        pulumi.set(__self__, "hostname", hostname)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "node_id", node_id)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "user", user)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> Sequence[_builtins.str]:
        """
        The list of device's IPs
        """
        return pulumi.get(self, "addresses")

    @_builtins.property
    @pulumi.getter
    def hostname(self) -> _builtins.str:
        """
        The short hostname of the device
        """
        return pulumi.get(self, "hostname")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The legacy identifier of the device. Use node_id instead for new resources.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The full name of the device (e.g. `hostname.domain.ts.net`)
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="nodeId")
    def node_id(self) -> _builtins.str:
        """
        The preferred indentifier for a device.
        """
        return pulumi.get(self, "node_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The tags applied to the device
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def user(self) -> _builtins.str:
        """
        The user associated with the device
        """
        return pulumi.get(self, "user")


@pulumi.output_type
class GetUsersUserResult(dict):
    def __init__(__self__, *,
                 created: _builtins.str,
                 currently_connected: _builtins.bool,
                 device_count: _builtins.int,
                 display_name: _builtins.str,
                 id: _builtins.str,
                 last_seen: _builtins.str,
                 login_name: _builtins.str,
                 profile_pic_url: _builtins.str,
                 role: _builtins.str,
                 status: _builtins.str,
                 tailnet_id: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str created: The time the user joined their tailnet.
        :param _builtins.bool currently_connected: true when the user has a node currently connected to the control server.
        :param _builtins.int device_count: Number of devices the user owns.
        :param _builtins.str display_name: The name of the user.
        :param _builtins.str id: The unique identifier for the user.
        :param _builtins.str last_seen: The later of either: a) The last time any of the user's nodes were connected to the network or b) The last time the user authenticated to any tailscale service, including the admin panel.
        :param _builtins.str login_name: The emailish login name of the user.
        :param _builtins.str profile_pic_url: The profile pic URL for the user.
        :param _builtins.str role: The role of the user.
        :param _builtins.str status: The status of the user.
        :param _builtins.str tailnet_id: The tailnet that owns the user.
        :param _builtins.str type: The type of relation this user has to the tailnet associated with the request.
        """
        pulumi.set(__self__, "created", created)
        pulumi.set(__self__, "currently_connected", currently_connected)
        pulumi.set(__self__, "device_count", device_count)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_seen", last_seen)
        pulumi.set(__self__, "login_name", login_name)
        pulumi.set(__self__, "profile_pic_url", profile_pic_url)
        pulumi.set(__self__, "role", role)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tailnet_id", tailnet_id)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def created(self) -> _builtins.str:
        """
        The time the user joined their tailnet.
        """
        return pulumi.get(self, "created")

    @_builtins.property
    @pulumi.getter(name="currentlyConnected")
    def currently_connected(self) -> _builtins.bool:
        """
        true when the user has a node currently connected to the control server.
        """
        return pulumi.get(self, "currently_connected")

    @_builtins.property
    @pulumi.getter(name="deviceCount")
    def device_count(self) -> _builtins.int:
        """
        Number of devices the user owns.
        """
        return pulumi.get(self, "device_count")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the user.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The unique identifier for the user.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastSeen")
    def last_seen(self) -> _builtins.str:
        """
        The later of either: a) The last time any of the user's nodes were connected to the network or b) The last time the user authenticated to any tailscale service, including the admin panel.
        """
        return pulumi.get(self, "last_seen")

    @_builtins.property
    @pulumi.getter(name="loginName")
    def login_name(self) -> _builtins.str:
        """
        The emailish login name of the user.
        """
        return pulumi.get(self, "login_name")

    @_builtins.property
    @pulumi.getter(name="profilePicUrl")
    def profile_pic_url(self) -> _builtins.str:
        """
        The profile pic URL for the user.
        """
        return pulumi.get(self, "profile_pic_url")

    @_builtins.property
    @pulumi.getter
    def role(self) -> _builtins.str:
        """
        The role of the user.
        """
        return pulumi.get(self, "role")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the user.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="tailnetId")
    def tailnet_id(self) -> _builtins.str:
        """
        The tailnet that owns the user.
        """
        return pulumi.get(self, "tailnet_id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The type of relation this user has to the tailnet associated with the request.
        """
        return pulumi.get(self, "type")


