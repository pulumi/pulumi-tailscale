# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['PostureIntegrationArgs', 'PostureIntegration']

@pulumi.input_type
class PostureIntegrationArgs:
    def __init__(__self__, *,
                 client_secret: pulumi.Input[str],
                 posture_provider: pulumi.Input[str],
                 client_id: Optional[pulumi.Input[str]] = None,
                 cloud_id: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a PostureIntegration resource.
        :param pulumi.Input[str] client_secret: The secret (auth key, token, etc.) used to authenticate with the provider.
        :param pulumi.Input[str] posture_provider: The type of posture integration data provider.
        :param pulumi.Input[str] client_id: Unique identifier for your client.
        :param pulumi.Input[str] cloud_id: Identifies which of the provider's clouds to integrate with.
        :param pulumi.Input[str] tenant_id: The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        pulumi.set(__self__, "client_secret", client_secret)
        pulumi.set(__self__, "posture_provider", posture_provider)
        if client_id is not None:
            pulumi.set(__self__, "client_id", client_id)
        if cloud_id is not None:
            pulumi.set(__self__, "cloud_id", cloud_id)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> pulumi.Input[str]:
        """
        The secret (auth key, token, etc.) used to authenticate with the provider.
        """
        return pulumi.get(self, "client_secret")

    @client_secret.setter
    def client_secret(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_secret", value)

    @property
    @pulumi.getter(name="postureProvider")
    def posture_provider(self) -> pulumi.Input[str]:
        """
        The type of posture integration data provider.
        """
        return pulumi.get(self, "posture_provider")

    @posture_provider.setter
    def posture_provider(self, value: pulumi.Input[str]):
        pulumi.set(self, "posture_provider", value)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique identifier for your client.
        """
        return pulumi.get(self, "client_id")

    @client_id.setter
    def client_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_id", value)

    @property
    @pulumi.getter(name="cloudId")
    def cloud_id(self) -> Optional[pulumi.Input[str]]:
        """
        Identifies which of the provider's clouds to integrate with.
        """
        return pulumi.get(self, "cloud_id")

    @cloud_id.setter
    def cloud_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_id", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)


@pulumi.input_type
class _PostureIntegrationState:
    def __init__(__self__, *,
                 client_id: Optional[pulumi.Input[str]] = None,
                 client_secret: Optional[pulumi.Input[str]] = None,
                 cloud_id: Optional[pulumi.Input[str]] = None,
                 posture_provider: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering PostureIntegration resources.
        :param pulumi.Input[str] client_id: Unique identifier for your client.
        :param pulumi.Input[str] client_secret: The secret (auth key, token, etc.) used to authenticate with the provider.
        :param pulumi.Input[str] cloud_id: Identifies which of the provider's clouds to integrate with.
        :param pulumi.Input[str] posture_provider: The type of posture integration data provider.
        :param pulumi.Input[str] tenant_id: The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        if client_id is not None:
            pulumi.set(__self__, "client_id", client_id)
        if client_secret is not None:
            pulumi.set(__self__, "client_secret", client_secret)
        if cloud_id is not None:
            pulumi.set(__self__, "cloud_id", cloud_id)
        if posture_provider is not None:
            pulumi.set(__self__, "posture_provider", posture_provider)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique identifier for your client.
        """
        return pulumi.get(self, "client_id")

    @client_id.setter
    def client_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_id", value)

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> Optional[pulumi.Input[str]]:
        """
        The secret (auth key, token, etc.) used to authenticate with the provider.
        """
        return pulumi.get(self, "client_secret")

    @client_secret.setter
    def client_secret(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_secret", value)

    @property
    @pulumi.getter(name="cloudId")
    def cloud_id(self) -> Optional[pulumi.Input[str]]:
        """
        Identifies which of the provider's clouds to integrate with.
        """
        return pulumi.get(self, "cloud_id")

    @cloud_id.setter
    def cloud_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_id", value)

    @property
    @pulumi.getter(name="postureProvider")
    def posture_provider(self) -> Optional[pulumi.Input[str]]:
        """
        The type of posture integration data provider.
        """
        return pulumi.get(self, "posture_provider")

    @posture_provider.setter
    def posture_provider(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "posture_provider", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)


class PostureIntegration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_id: Optional[pulumi.Input[str]] = None,
                 client_secret: Optional[pulumi.Input[str]] = None,
                 cloud_id: Optional[pulumi.Input[str]] = None,
                 posture_provider: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        The posture_integration resource allows you to manage integrations with device posture data providers. See https://tailscale.com/kb/1288/device-posture for more information.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_tailscale as tailscale

        sample_posture_integration = tailscale.PostureIntegration("sample_posture_integration",
            posture_provider="falcon",
            cloud_id="us-1",
            client_id="clientid1",
            client_secret="test-secret1")
        ```

        ## Import

        Posture integration can be imported using the posture integration id, e.g.,

        ```sh
        $ pulumi import tailscale:index/postureIntegration:PostureIntegration sample_posture_integration 123456789
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] client_id: Unique identifier for your client.
        :param pulumi.Input[str] client_secret: The secret (auth key, token, etc.) used to authenticate with the provider.
        :param pulumi.Input[str] cloud_id: Identifies which of the provider's clouds to integrate with.
        :param pulumi.Input[str] posture_provider: The type of posture integration data provider.
        :param pulumi.Input[str] tenant_id: The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PostureIntegrationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The posture_integration resource allows you to manage integrations with device posture data providers. See https://tailscale.com/kb/1288/device-posture for more information.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_tailscale as tailscale

        sample_posture_integration = tailscale.PostureIntegration("sample_posture_integration",
            posture_provider="falcon",
            cloud_id="us-1",
            client_id="clientid1",
            client_secret="test-secret1")
        ```

        ## Import

        Posture integration can be imported using the posture integration id, e.g.,

        ```sh
        $ pulumi import tailscale:index/postureIntegration:PostureIntegration sample_posture_integration 123456789
        ```

        :param str resource_name: The name of the resource.
        :param PostureIntegrationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PostureIntegrationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_id: Optional[pulumi.Input[str]] = None,
                 client_secret: Optional[pulumi.Input[str]] = None,
                 cloud_id: Optional[pulumi.Input[str]] = None,
                 posture_provider: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PostureIntegrationArgs.__new__(PostureIntegrationArgs)

            __props__.__dict__["client_id"] = client_id
            if client_secret is None and not opts.urn:
                raise TypeError("Missing required property 'client_secret'")
            __props__.__dict__["client_secret"] = client_secret
            __props__.__dict__["cloud_id"] = cloud_id
            if posture_provider is None and not opts.urn:
                raise TypeError("Missing required property 'posture_provider'")
            __props__.__dict__["posture_provider"] = posture_provider
            __props__.__dict__["tenant_id"] = tenant_id
        super(PostureIntegration, __self__).__init__(
            'tailscale:index/postureIntegration:PostureIntegration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            client_id: Optional[pulumi.Input[str]] = None,
            client_secret: Optional[pulumi.Input[str]] = None,
            cloud_id: Optional[pulumi.Input[str]] = None,
            posture_provider: Optional[pulumi.Input[str]] = None,
            tenant_id: Optional[pulumi.Input[str]] = None) -> 'PostureIntegration':
        """
        Get an existing PostureIntegration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] client_id: Unique identifier for your client.
        :param pulumi.Input[str] client_secret: The secret (auth key, token, etc.) used to authenticate with the provider.
        :param pulumi.Input[str] cloud_id: Identifies which of the provider's clouds to integrate with.
        :param pulumi.Input[str] posture_provider: The type of posture integration data provider.
        :param pulumi.Input[str] tenant_id: The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PostureIntegrationState.__new__(_PostureIntegrationState)

        __props__.__dict__["client_id"] = client_id
        __props__.__dict__["client_secret"] = client_secret
        __props__.__dict__["cloud_id"] = cloud_id
        __props__.__dict__["posture_provider"] = posture_provider
        __props__.__dict__["tenant_id"] = tenant_id
        return PostureIntegration(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> pulumi.Output[Optional[str]]:
        """
        Unique identifier for your client.
        """
        return pulumi.get(self, "client_id")

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> pulumi.Output[str]:
        """
        The secret (auth key, token, etc.) used to authenticate with the provider.
        """
        return pulumi.get(self, "client_secret")

    @property
    @pulumi.getter(name="cloudId")
    def cloud_id(self) -> pulumi.Output[Optional[str]]:
        """
        Identifies which of the provider's clouds to integrate with.
        """
        return pulumi.get(self, "cloud_id")

    @property
    @pulumi.getter(name="postureProvider")
    def posture_provider(self) -> pulumi.Output[str]:
        """
        The type of posture integration data provider.
        """
        return pulumi.get(self, "posture_provider")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Output[Optional[str]]:
        """
        The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
        """
        return pulumi.get(self, "tenant_id")

