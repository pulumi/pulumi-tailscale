// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OauthClientState extends com.pulumi.resources.ResourceArgs {

    public static final OauthClientState Empty = new OauthClientState();

    /**
     * The creation timestamp of the key in RFC3339 format
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The creation timestamp of the key in RFC3339 format
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * A description of the key consisting of alphanumeric characters. Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the key consisting of alphanumeric characters. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The client secret, also known as the key. Used with the client ID to generate access tokens.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return The client secret, also known as the key. Used with the client ID to generate access tokens.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include &#34;devices:core&#34; or &#34;authKeys&#34;.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include &#34;devices:core&#34; or &#34;authKeys&#34;.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * ID of the user who created this key, empty for OAuth clients created by other OAuth clients.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return ID of the user who created this key, empty for OAuth clients created by other OAuth clients.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private OauthClientState() {}

    private OauthClientState(OauthClientState $) {
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.key = $.key;
        this.scopes = $.scopes;
        this.tags = $.tags;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OauthClientState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OauthClientState $;

        public Builder() {
            $ = new OauthClientState();
        }

        public Builder(OauthClientState defaults) {
            $ = new OauthClientState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The creation timestamp of the key in RFC3339 format
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The creation timestamp of the key in RFC3339 format
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description A description of the key consisting of alphanumeric characters. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the key consisting of alphanumeric characters. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param key The client secret, also known as the key. Used with the client ID to generate access tokens.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The client secret, also known as the key. Used with the client ID to generate access tokens.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param scopes Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param tags A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include &#34;devices:core&#34; or &#34;authKeys&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include &#34;devices:core&#34; or &#34;authKeys&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include &#34;devices:core&#34; or &#34;authKeys&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param userId ID of the user who created this key, empty for OAuth clients created by other OAuth clients.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId ID of the user who created this key, empty for OAuth clients created by other OAuth clients.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public OauthClientState build() {
            return $;
        }
    }

}
