// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class DnsPreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsPreferencesArgs Empty = new DnsPreferencesArgs();

    /**
     * Whether or not to enable magic DNS
     * 
     */
    @Import(name="magicDns", required=true)
    private Output<Boolean> magicDns;

    /**
     * @return Whether or not to enable magic DNS
     * 
     */
    public Output<Boolean> magicDns() {
        return this.magicDns;
    }

    private DnsPreferencesArgs() {}

    private DnsPreferencesArgs(DnsPreferencesArgs $) {
        this.magicDns = $.magicDns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsPreferencesArgs $;

        public Builder() {
            $ = new DnsPreferencesArgs();
        }

        public Builder(DnsPreferencesArgs defaults) {
            $ = new DnsPreferencesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param magicDns Whether or not to enable magic DNS
         * 
         * @return builder
         * 
         */
        public Builder magicDns(Output<Boolean> magicDns) {
            $.magicDns = magicDns;
            return this;
        }

        /**
         * @param magicDns Whether or not to enable magic DNS
         * 
         * @return builder
         * 
         */
        public Builder magicDns(Boolean magicDns) {
            return magicDns(Output.of(magicDns));
        }

        public DnsPreferencesArgs build() {
            $.magicDns = Objects.requireNonNull($.magicDns, "expected parameter 'magicDns' to be non-null");
            return $;
        }
    }

}
