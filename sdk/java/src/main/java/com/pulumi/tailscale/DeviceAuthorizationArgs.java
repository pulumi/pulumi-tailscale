// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class DeviceAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceAuthorizationArgs Empty = new DeviceAuthorizationArgs();

    /**
     * Whether or not the device is authorized
     * 
     */
    @Import(name="authorized", required=true)
    private Output<Boolean> authorized;

    /**
     * @return Whether or not the device is authorized
     * 
     */
    public Output<Boolean> authorized() {
        return this.authorized;
    }

    /**
     * The device to set as authorized
     * 
     */
    @Import(name="deviceId", required=true)
    private Output<String> deviceId;

    /**
     * @return The device to set as authorized
     * 
     */
    public Output<String> deviceId() {
        return this.deviceId;
    }

    private DeviceAuthorizationArgs() {}

    private DeviceAuthorizationArgs(DeviceAuthorizationArgs $) {
        this.authorized = $.authorized;
        this.deviceId = $.deviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceAuthorizationArgs $;

        public Builder() {
            $ = new DeviceAuthorizationArgs();
        }

        public Builder(DeviceAuthorizationArgs defaults) {
            $ = new DeviceAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorized Whether or not the device is authorized
         * 
         * @return builder
         * 
         */
        public Builder authorized(Output<Boolean> authorized) {
            $.authorized = authorized;
            return this;
        }

        /**
         * @param authorized Whether or not the device is authorized
         * 
         * @return builder
         * 
         */
        public Builder authorized(Boolean authorized) {
            return authorized(Output.of(authorized));
        }

        /**
         * @param deviceId The device to set as authorized
         * 
         * @return builder
         * 
         */
        public Builder deviceId(Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        /**
         * @param deviceId The device to set as authorized
         * 
         * @return builder
         * 
         */
        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        public DeviceAuthorizationArgs build() {
            if ($.authorized == null) {
                throw new MissingRequiredPropertyException("DeviceAuthorizationArgs", "authorized");
            }
            if ($.deviceId == null) {
                throw new MissingRequiredPropertyException("DeviceAuthorizationArgs", "deviceId");
            }
            return $;
        }
    }

}
