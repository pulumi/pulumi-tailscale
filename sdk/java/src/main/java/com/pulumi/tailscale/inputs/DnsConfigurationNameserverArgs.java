// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DnsConfigurationNameserverArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsConfigurationNameserverArgs Empty = new DnsConfigurationNameserverArgs();

    /**
     * The nameserver&#39;s IPv4 or IPv6 address
     * 
     */
    @Import(name="address", required=true)
    private Output<String> address;

    /**
     * @return The nameserver&#39;s IPv4 or IPv6 address
     * 
     */
    public Output<String> address() {
        return this.address;
    }

    /**
     * This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
     * 
     */
    @Import(name="useWithExitNode")
    private @Nullable Output<Boolean> useWithExitNode;

    /**
     * @return This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
     * 
     */
    public Optional<Output<Boolean>> useWithExitNode() {
        return Optional.ofNullable(this.useWithExitNode);
    }

    private DnsConfigurationNameserverArgs() {}

    private DnsConfigurationNameserverArgs(DnsConfigurationNameserverArgs $) {
        this.address = $.address;
        this.useWithExitNode = $.useWithExitNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsConfigurationNameserverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsConfigurationNameserverArgs $;

        public Builder() {
            $ = new DnsConfigurationNameserverArgs();
        }

        public Builder(DnsConfigurationNameserverArgs defaults) {
            $ = new DnsConfigurationNameserverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The nameserver&#39;s IPv4 or IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder address(Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The nameserver&#39;s IPv4 or IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param useWithExitNode This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder useWithExitNode(@Nullable Output<Boolean> useWithExitNode) {
            $.useWithExitNode = useWithExitNode;
            return this;
        }

        /**
         * @param useWithExitNode This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder useWithExitNode(Boolean useWithExitNode) {
            return useWithExitNode(Output.of(useWithExitNode));
        }

        public DnsConfigurationNameserverArgs build() {
            if ($.address == null) {
                throw new MissingRequiredPropertyException("DnsConfigurationNameserverArgs", "address");
            }
            return $;
        }
    }

}
