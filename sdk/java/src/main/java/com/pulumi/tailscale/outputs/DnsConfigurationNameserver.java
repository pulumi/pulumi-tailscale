// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DnsConfigurationNameserver {
    /**
     * @return The nameserver&#39;s IPv4 or IPv6 address
     * 
     */
    private String address;
    /**
     * @return This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
     * 
     */
    private @Nullable Boolean useWithExitNode;

    private DnsConfigurationNameserver() {}
    /**
     * @return The nameserver&#39;s IPv4 or IPv6 address
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
     * 
     */
    public Optional<Boolean> useWithExitNode() {
        return Optional.ofNullable(this.useWithExitNode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DnsConfigurationNameserver defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private @Nullable Boolean useWithExitNode;
        public Builder() {}
        public Builder(DnsConfigurationNameserver defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.useWithExitNode = defaults.useWithExitNode;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("DnsConfigurationNameserver", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder useWithExitNode(@Nullable Boolean useWithExitNode) {

            this.useWithExitNode = useWithExitNode;
            return this;
        }
        public DnsConfigurationNameserver build() {
            final var _resultValue = new DnsConfigurationNameserver();
            _resultValue.address = address;
            _resultValue.useWithExitNode = useWithExitNode;
            return _resultValue;
        }
    }
}
