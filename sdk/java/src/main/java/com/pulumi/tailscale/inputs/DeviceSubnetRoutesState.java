// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceSubnetRoutesState extends com.pulumi.resources.ResourceArgs {

    public static final DeviceSubnetRoutesState Empty = new DeviceSubnetRoutesState();

    /**
     * The device to set subnet routes for
     * 
     */
    @Import(name="deviceId")
    private @Nullable Output<String> deviceId;

    /**
     * @return The device to set subnet routes for
     * 
     */
    public Optional<Output<String>> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }

    /**
     * The subnet routes that are enabled to be routed by a device
     * 
     */
    @Import(name="routes")
    private @Nullable Output<List<String>> routes;

    /**
     * @return The subnet routes that are enabled to be routed by a device
     * 
     */
    public Optional<Output<List<String>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    private DeviceSubnetRoutesState() {}

    private DeviceSubnetRoutesState(DeviceSubnetRoutesState $) {
        this.deviceId = $.deviceId;
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceSubnetRoutesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceSubnetRoutesState $;

        public Builder() {
            $ = new DeviceSubnetRoutesState();
        }

        public Builder(DeviceSubnetRoutesState defaults) {
            $ = new DeviceSubnetRoutesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceId The device to set subnet routes for
         * 
         * @return builder
         * 
         */
        public Builder deviceId(@Nullable Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        /**
         * @param deviceId The device to set subnet routes for
         * 
         * @return builder
         * 
         */
        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        /**
         * @param routes The subnet routes that are enabled to be routed by a device
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable Output<List<String>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes The subnet routes that are enabled to be routed by a device
         * 
         * @return builder
         * 
         */
        public Builder routes(List<String> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes The subnet routes that are enabled to be routed by a device
         * 
         * @return builder
         * 
         */
        public Builder routes(String... routes) {
            return routes(List.of(routes));
        }

        public DeviceSubnetRoutesState build() {
            return $;
        }
    }

}
