// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.tailscale.inputs.ContactsAccountArgs;
import com.pulumi.tailscale.inputs.ContactsSecurityArgs;
import com.pulumi.tailscale.inputs.ContactsSupportArgs;
import java.util.Objects;


public final class ContactsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContactsArgs Empty = new ContactsArgs();

    /**
     * Configuration for communications about important changes to your tailnet
     * 
     */
    @Import(name="account", required=true)
    private Output<ContactsAccountArgs> account;

    /**
     * @return Configuration for communications about important changes to your tailnet
     * 
     */
    public Output<ContactsAccountArgs> account() {
        return this.account;
    }

    /**
     * Configuration for communications about security issues affecting your tailnet
     * 
     */
    @Import(name="security", required=true)
    private Output<ContactsSecurityArgs> security;

    /**
     * @return Configuration for communications about security issues affecting your tailnet
     * 
     */
    public Output<ContactsSecurityArgs> security() {
        return this.security;
    }

    /**
     * Configuration for communications about misconfigurations in your tailnet
     * 
     */
    @Import(name="support", required=true)
    private Output<ContactsSupportArgs> support;

    /**
     * @return Configuration for communications about misconfigurations in your tailnet
     * 
     */
    public Output<ContactsSupportArgs> support() {
        return this.support;
    }

    private ContactsArgs() {}

    private ContactsArgs(ContactsArgs $) {
        this.account = $.account;
        this.security = $.security;
        this.support = $.support;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactsArgs $;

        public Builder() {
            $ = new ContactsArgs();
        }

        public Builder(ContactsArgs defaults) {
            $ = new ContactsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param account Configuration for communications about important changes to your tailnet
         * 
         * @return builder
         * 
         */
        public Builder account(Output<ContactsAccountArgs> account) {
            $.account = account;
            return this;
        }

        /**
         * @param account Configuration for communications about important changes to your tailnet
         * 
         * @return builder
         * 
         */
        public Builder account(ContactsAccountArgs account) {
            return account(Output.of(account));
        }

        /**
         * @param security Configuration for communications about security issues affecting your tailnet
         * 
         * @return builder
         * 
         */
        public Builder security(Output<ContactsSecurityArgs> security) {
            $.security = security;
            return this;
        }

        /**
         * @param security Configuration for communications about security issues affecting your tailnet
         * 
         * @return builder
         * 
         */
        public Builder security(ContactsSecurityArgs security) {
            return security(Output.of(security));
        }

        /**
         * @param support Configuration for communications about misconfigurations in your tailnet
         * 
         * @return builder
         * 
         */
        public Builder support(Output<ContactsSupportArgs> support) {
            $.support = support;
            return this;
        }

        /**
         * @param support Configuration for communications about misconfigurations in your tailnet
         * 
         * @return builder
         * 
         */
        public Builder support(ContactsSupportArgs support) {
            return support(Output.of(support));
        }

        public ContactsArgs build() {
            if ($.account == null) {
                throw new MissingRequiredPropertyException("ContactsArgs", "account");
            }
            if ($.security == null) {
                throw new MissingRequiredPropertyException("ContactsArgs", "security");
            }
            if ($.support == null) {
                throw new MissingRequiredPropertyException("ContactsArgs", "support");
            }
            return $;
        }
    }

}
