// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tailscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceKeyArgs Empty = new DeviceKeyArgs();

    /**
     * The device to update the key properties of
     * 
     */
    @Import(name="deviceId", required=true)
    private Output<String> deviceId;

    /**
     * @return The device to update the key properties of
     * 
     */
    public Output<String> deviceId() {
        return this.deviceId;
    }

    /**
     * Determines whether or not the device&#39;s key will expire. Defaults to `false`.
     * 
     */
    @Import(name="keyExpiryDisabled")
    private @Nullable Output<Boolean> keyExpiryDisabled;

    /**
     * @return Determines whether or not the device&#39;s key will expire. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> keyExpiryDisabled() {
        return Optional.ofNullable(this.keyExpiryDisabled);
    }

    private DeviceKeyArgs() {}

    private DeviceKeyArgs(DeviceKeyArgs $) {
        this.deviceId = $.deviceId;
        this.keyExpiryDisabled = $.keyExpiryDisabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceKeyArgs $;

        public Builder() {
            $ = new DeviceKeyArgs();
        }

        public Builder(DeviceKeyArgs defaults) {
            $ = new DeviceKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceId The device to update the key properties of
         * 
         * @return builder
         * 
         */
        public Builder deviceId(Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        /**
         * @param deviceId The device to update the key properties of
         * 
         * @return builder
         * 
         */
        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        /**
         * @param keyExpiryDisabled Determines whether or not the device&#39;s key will expire. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder keyExpiryDisabled(@Nullable Output<Boolean> keyExpiryDisabled) {
            $.keyExpiryDisabled = keyExpiryDisabled;
            return this;
        }

        /**
         * @param keyExpiryDisabled Determines whether or not the device&#39;s key will expire. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder keyExpiryDisabled(Boolean keyExpiryDisabled) {
            return keyExpiryDisabled(Output.of(keyExpiryDisabled));
        }

        public DeviceKeyArgs build() {
            $.deviceId = Objects.requireNonNull($.deviceId, "expected parameter 'deviceId' to be non-null");
            return $;
        }
    }

}
