// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    public static class GetDevice
    {
        /// <summary>
        /// The device data source describes a single device in a tailnet.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tailscale = Pulumi.Tailscale;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var sampleDevice = Output.Create(Tailscale.GetDevice.InvokeAsync(new Tailscale.GetDeviceArgs
        ///         {
        ///             Name = "user1-device.example.com",
        ///             WaitFor = "60s",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDeviceResult> InvokeAsync(GetDeviceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDeviceResult>("tailscale:index/getDevice:getDevice", args ?? new GetDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// The device data source describes a single device in a tailnet.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tailscale = Pulumi.Tailscale;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var sampleDevice = Output.Create(Tailscale.GetDevice.InvokeAsync(new Tailscale.GetDeviceArgs
        ///         {
        ///             Name = "user1-device.example.com",
        ///             WaitFor = "60s",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDeviceResult> Invoke(GetDeviceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDeviceResult>("tailscale:index/getDevice:getDevice", args ?? new GetDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeviceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the tailnet device to obtain the attributes of.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// If specified, the provider will retry obtaining the device data every second until the specified duration has been reached. Must be a value greater than 1 second
        /// </summary>
        [Input("waitFor")]
        public string? WaitFor { get; set; }

        public GetDeviceArgs()
        {
        }
    }

    public sealed class GetDeviceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the tailnet device to obtain the attributes of.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// If specified, the provider will retry obtaining the device data every second until the specified duration has been reached. Must be a value greater than 1 second
        /// </summary>
        [Input("waitFor")]
        public Input<string>? WaitFor { get; set; }

        public GetDeviceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDeviceResult
    {
        /// <summary>
        /// Tailscale IPs for the device
        /// </summary>
        public readonly ImmutableArray<string> Addresses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Tags applied to the device
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The user associated with the device
        /// </summary>
        public readonly string User;
        public readonly string? WaitFor;

        [OutputConstructor]
        private GetDeviceResult(
            ImmutableArray<string> addresses,

            string id,

            string name,

            ImmutableArray<string> tags,

            string user,

            string? waitFor)
        {
            Addresses = addresses;
            Id = id;
            Name = name;
            Tags = tags;
            User = user;
            WaitFor = waitFor;
        }
    }
}
