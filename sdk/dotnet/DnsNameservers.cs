// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    /// <summary>
    /// The dns_nameservers resource allows you to configure DNS nameservers for your Tailscale network. See https://tailscale.com/kb/1054/dns for more information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Tailscale = Pulumi.Tailscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sampleNameservers = new Tailscale.DnsNameservers("sampleNameservers", new()
    ///     {
    ///         Nameservers = new[]
    ///         {
    ///             "8.8.8.8",
    ///             "8.8.4.4",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [TailscaleResourceType("tailscale:index/dnsNameservers:DnsNameservers")]
    public partial class DnsNameservers : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 addresses are accepted.
        /// </summary>
        [Output("nameservers")]
        public Output<ImmutableArray<string>> Nameservers { get; private set; } = null!;


        /// <summary>
        /// Create a DnsNameservers resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DnsNameservers(string name, DnsNameserversArgs args, CustomResourceOptions? options = null)
            : base("tailscale:index/dnsNameservers:DnsNameservers", name, args ?? new DnsNameserversArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DnsNameservers(string name, Input<string> id, DnsNameserversState? state = null, CustomResourceOptions? options = null)
            : base("tailscale:index/dnsNameservers:DnsNameservers", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DnsNameservers resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DnsNameservers Get(string name, Input<string> id, DnsNameserversState? state = null, CustomResourceOptions? options = null)
        {
            return new DnsNameservers(name, id, state, options);
        }
    }

    public sealed class DnsNameserversArgs : global::Pulumi.ResourceArgs
    {
        [Input("nameservers", required: true)]
        private InputList<string>? _nameservers;

        /// <summary>
        /// Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 addresses are accepted.
        /// </summary>
        public InputList<string> Nameservers
        {
            get => _nameservers ?? (_nameservers = new InputList<string>());
            set => _nameservers = value;
        }

        public DnsNameserversArgs()
        {
        }
        public static new DnsNameserversArgs Empty => new DnsNameserversArgs();
    }

    public sealed class DnsNameserversState : global::Pulumi.ResourceArgs
    {
        [Input("nameservers")]
        private InputList<string>? _nameservers;

        /// <summary>
        /// Devices on your network will use these nameservers to resolve DNS names. IPv4 or IPv6 addresses are accepted.
        /// </summary>
        public InputList<string> Nameservers
        {
            get => _nameservers ?? (_nameservers = new InputList<string>());
            set => _nameservers = value;
        }

        public DnsNameserversState()
        {
        }
        public static new DnsNameserversState Empty => new DnsNameserversState();
    }
}
