// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    /// <summary>
    /// The logstream_configuration resource allows you to configure streaming configuration or network flow logs to a supported security information and event management (SIEM) system. See https://tailscale.com/kb/1255/log-streaming for more information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tailscale = Pulumi.Tailscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sampleLogstreamConfiguration = new Tailscale.LogstreamConfiguration("sample_logstream_configuration", new()
    ///     {
    ///         LogType = "configuration",
    ///         DestinationType = "panther",
    ///         Url = "https://example.com",
    ///         Token = "some-token",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Logstream configuration can be imported using the logstream configuration id, e.g.,
    /// 
    /// ```sh
    /// $ pulumi import tailscale:index/logstreamConfiguration:LogstreamConfiguration sample_logstream_configuration 123456789
    /// ```
    /// </summary>
    [TailscaleResourceType("tailscale:index/logstreamConfiguration:LogstreamConfiguration")]
    public partial class LogstreamConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The type of system to which logs are being streamed.
        /// </summary>
        [Output("destinationType")]
        public Output<string> DestinationType { get; private set; } = null!;

        /// <summary>
        /// The type of log that is streamed to this endpoint.
        /// </summary>
        [Output("logType")]
        public Output<string> LogType { get; private set; } = null!;

        /// <summary>
        /// The token/password with which log streams to this endpoint should be authenticated.
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        /// <summary>
        /// The URL to which log streams are being posted.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// The username with which log streams to this endpoint are authenticated. Only required if destination_type is 'elastic', defaults to 'user' if not set.
        /// </summary>
        [Output("user")]
        public Output<string?> User { get; private set; } = null!;


        /// <summary>
        /// Create a LogstreamConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogstreamConfiguration(string name, LogstreamConfigurationArgs args, CustomResourceOptions? options = null)
            : base("tailscale:index/logstreamConfiguration:LogstreamConfiguration", name, args ?? new LogstreamConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogstreamConfiguration(string name, Input<string> id, LogstreamConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("tailscale:index/logstreamConfiguration:LogstreamConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "token",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogstreamConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogstreamConfiguration Get(string name, Input<string> id, LogstreamConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new LogstreamConfiguration(name, id, state, options);
        }
    }

    public sealed class LogstreamConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of system to which logs are being streamed.
        /// </summary>
        [Input("destinationType", required: true)]
        public Input<string> DestinationType { get; set; } = null!;

        /// <summary>
        /// The type of log that is streamed to this endpoint.
        /// </summary>
        [Input("logType", required: true)]
        public Input<string> LogType { get; set; } = null!;

        [Input("token", required: true)]
        private Input<string>? _token;

        /// <summary>
        /// The token/password with which log streams to this endpoint should be authenticated.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The URL to which log streams are being posted.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// The username with which log streams to this endpoint are authenticated. Only required if destination_type is 'elastic', defaults to 'user' if not set.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public LogstreamConfigurationArgs()
        {
        }
        public static new LogstreamConfigurationArgs Empty => new LogstreamConfigurationArgs();
    }

    public sealed class LogstreamConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of system to which logs are being streamed.
        /// </summary>
        [Input("destinationType")]
        public Input<string>? DestinationType { get; set; }

        /// <summary>
        /// The type of log that is streamed to this endpoint.
        /// </summary>
        [Input("logType")]
        public Input<string>? LogType { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The token/password with which log streams to this endpoint should be authenticated.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The URL to which log streams are being posted.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The username with which log streams to this endpoint are authenticated. Only required if destination_type is 'elastic', defaults to 'user' if not set.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public LogstreamConfigurationState()
        {
        }
        public static new LogstreamConfigurationState Empty => new LogstreamConfigurationState();
    }
}
