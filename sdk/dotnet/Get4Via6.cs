// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    public static class Get4Via6
    {
        /// <summary>
        /// The 4via6 data source is calculates an IPv6 prefix for a given site ID and IPv4 CIDR. See Tailscale documentation for [4via6 subnets](https://tailscale.com/kb/1201/4via6-subnets/) for more details.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tailscale = Pulumi.Tailscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tailscale.Get4Via6.Invoke(new()
        ///     {
        ///         Cidr = "10.1.1.0/24",
        ///         Site = 7,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<Get4Via6Result> InvokeAsync(Get4Via6Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Get4Via6Result>("tailscale:index/get4Via6:get4Via6", args ?? new Get4Via6Args(), options.WithDefaults());

        /// <summary>
        /// The 4via6 data source is calculates an IPv6 prefix for a given site ID and IPv4 CIDR. See Tailscale documentation for [4via6 subnets](https://tailscale.com/kb/1201/4via6-subnets/) for more details.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tailscale = Pulumi.Tailscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tailscale.Get4Via6.Invoke(new()
        ///     {
        ///         Cidr = "10.1.1.0/24",
        ///         Site = 7,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<Get4Via6Result> Invoke(Get4Via6InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Get4Via6Result>("tailscale:index/get4Via6:get4Via6", args ?? new Get4Via6InvokeArgs(), options.WithDefaults());
    }


    public sealed class Get4Via6Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IPv4 CIDR to map
        /// </summary>
        [Input("cidr", required: true)]
        public string Cidr { get; set; } = null!;

        /// <summary>
        /// Site ID (between 0 and 255)
        /// </summary>
        [Input("site", required: true)]
        public int Site { get; set; }

        public Get4Via6Args()
        {
        }
        public static new Get4Via6Args Empty => new Get4Via6Args();
    }

    public sealed class Get4Via6InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IPv4 CIDR to map
        /// </summary>
        [Input("cidr", required: true)]
        public Input<string> Cidr { get; set; } = null!;

        /// <summary>
        /// Site ID (between 0 and 255)
        /// </summary>
        [Input("site", required: true)]
        public Input<int> Site { get; set; } = null!;

        public Get4Via6InvokeArgs()
        {
        }
        public static new Get4Via6InvokeArgs Empty => new Get4Via6InvokeArgs();
    }


    [OutputType]
    public sealed class Get4Via6Result
    {
        /// <summary>
        /// The IPv4 CIDR to map
        /// </summary>
        public readonly string Cidr;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The 4via6 mapped address
        /// </summary>
        public readonly string Ipv6;
        /// <summary>
        /// Site ID (between 0 and 255)
        /// </summary>
        public readonly int Site;

        [OutputConstructor]
        private Get4Via6Result(
            string cidr,

            string id,

            string ipv6,

            int site)
        {
            Cidr = cidr;
            Id = id;
            Ipv6 = ipv6;
            Site = site;
        }
    }
}
