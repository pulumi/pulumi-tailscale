// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    /// <summary>
    /// The device_key resource allows you to update the properties of a device's key
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tailscale = Pulumi.Tailscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleDevice = Tailscale.GetDevice.Invoke(new()
    ///     {
    ///         Name = "device.example.com",
    ///     });
    /// 
    ///     var exampleKey = new Tailscale.DeviceKey("example_key", new()
    ///     {
    ///         DeviceId = exampleDevice.Apply(getDeviceResult =&gt; getDeviceResult.Id),
    ///         KeyExpiryDisabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [TailscaleResourceType("tailscale:index/deviceKey:DeviceKey")]
    public partial class DeviceKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The device to update the key properties of
        /// </summary>
        [Output("deviceId")]
        public Output<string> DeviceId { get; private set; } = null!;

        /// <summary>
        /// Determines whether or not the device's key will expire. Defaults to `false`.
        /// </summary>
        [Output("keyExpiryDisabled")]
        public Output<bool?> KeyExpiryDisabled { get; private set; } = null!;


        /// <summary>
        /// Create a DeviceKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeviceKey(string name, DeviceKeyArgs args, CustomResourceOptions? options = null)
            : base("tailscale:index/deviceKey:DeviceKey", name, args ?? new DeviceKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeviceKey(string name, Input<string> id, DeviceKeyState? state = null, CustomResourceOptions? options = null)
            : base("tailscale:index/deviceKey:DeviceKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeviceKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeviceKey Get(string name, Input<string> id, DeviceKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new DeviceKey(name, id, state, options);
        }
    }

    public sealed class DeviceKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The device to update the key properties of
        /// </summary>
        [Input("deviceId", required: true)]
        public Input<string> DeviceId { get; set; } = null!;

        /// <summary>
        /// Determines whether or not the device's key will expire. Defaults to `false`.
        /// </summary>
        [Input("keyExpiryDisabled")]
        public Input<bool>? KeyExpiryDisabled { get; set; }

        public DeviceKeyArgs()
        {
        }
        public static new DeviceKeyArgs Empty => new DeviceKeyArgs();
    }

    public sealed class DeviceKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The device to update the key properties of
        /// </summary>
        [Input("deviceId")]
        public Input<string>? DeviceId { get; set; }

        /// <summary>
        /// Determines whether or not the device's key will expire. Defaults to `false`.
        /// </summary>
        [Input("keyExpiryDisabled")]
        public Input<bool>? KeyExpiryDisabled { get; set; }

        public DeviceKeyState()
        {
        }
        public static new DeviceKeyState Empty => new DeviceKeyState();
    }
}
