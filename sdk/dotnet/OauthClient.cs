// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    /// <summary>
    /// The oauth_client resource allows you to create OAuth clients to programmatically interact with the Tailscale API.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tailscale = Pulumi.Tailscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sampleClient = new Tailscale.OauthClient("sample_client", new()
    ///     {
    ///         Description = "sample client",
    ///         Scopes = new[]
    ///         {
    ///             "all:read",
    ///         },
    ///         Tags = new[]
    ///         {
    ///             "tag:test",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Note: Sensitive fields such as the secret key are not returned by the API and will be unset in the Terraform state after import.
    /// 
    /// ```sh
    /// $ pulumi import tailscale:index/oauthClient:OauthClient example k1234511CNTRL
    /// ```
    /// </summary>
    [TailscaleResourceType("tailscale:index/oauthClient:OauthClient")]
    public partial class OauthClient : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp of the key in RFC3339 format
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A description of the key consisting of alphanumeric characters. Defaults to `""`.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The client secret, also known as the key. Used with the client ID to generate access tokens.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        /// <summary>
        /// A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include "devices:core" or "auth_keys".
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// ID of the user who created this key, empty for OAuth clients created by other OAuth clients.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a OauthClient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OauthClient(string name, OauthClientArgs args, CustomResourceOptions? options = null)
            : base("tailscale:index/oauthClient:OauthClient", name, args ?? new OauthClientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OauthClient(string name, Input<string> id, OauthClientState? state = null, CustomResourceOptions? options = null)
            : base("tailscale:index/oauthClient:OauthClient", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "key",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OauthClient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OauthClient Get(string name, Input<string> id, OauthClientState? state = null, CustomResourceOptions? options = null)
        {
            return new OauthClient(name, id, state, options);
        }
    }

    public sealed class OauthClientArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the key consisting of alphanumeric characters. Defaults to `""`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("scopes", required: true)]
        private InputList<string>? _scopes;

        /// <summary>
        /// Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include "devices:core" or "auth_keys".
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public OauthClientArgs()
        {
        }
        public static new OauthClientArgs Empty => new OauthClientArgs();
    }

    public sealed class OauthClientState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation timestamp of the key in RFC3339 format
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A description of the key consisting of alphanumeric characters. Defaults to `""`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("key")]
        private Input<string>? _key;

        /// <summary>
        /// The client secret, also known as the key. Used with the client ID to generate access tokens.
        /// </summary>
        public Input<string>? Key
        {
            get => _key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// Scopes to grant to the client. See https://tailscale.com/kb/1215/ for a list of available scopes.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags that access tokens generated for the OAuth client will be able to assign to devices. Mandatory if the scopes include "devices:core" or "auth_keys".
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the user who created this key, empty for OAuth clients created by other OAuth clients.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public OauthClientState()
        {
        }
        public static new OauthClientState Empty => new OauthClientState();
    }
}
