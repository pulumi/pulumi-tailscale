// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The user data source describes a single user in a tailnet
 */
export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tailscale:index/getUser:getUser", {
        "id": args.id,
        "loginName": args.loginName,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * The unique identifier for the user.
     */
    id?: string;
    /**
     * The emailish login name of the user.
     */
    loginName?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * The time the user joined their tailnet.
     */
    readonly created: string;
    /**
     * true when the user has a node currently connected to the control server.
     */
    readonly currentlyConnected: boolean;
    /**
     * Number of devices the user owns.
     */
    readonly deviceCount: number;
    /**
     * The name of the user.
     */
    readonly displayName: string;
    /**
     * The unique identifier for the user.
     */
    readonly id?: string;
    /**
     * The later of either: a) The last time any of the user's nodes were connected to the network or b) The last time the user authenticated to any tailscale service, including the admin panel.
     */
    readonly lastSeen: string;
    /**
     * The emailish login name of the user.
     */
    readonly loginName?: string;
    /**
     * The profile pic URL for the user.
     */
    readonly profilePicUrl: string;
    /**
     * The role of the user.
     */
    readonly role: string;
    /**
     * The status of the user.
     */
    readonly status: string;
    /**
     * The tailnet that owns the user.
     */
    readonly tailnetId: string;
    /**
     * The type of relation this user has to the tailnet associated with the request.
     */
    readonly type: string;
}
/**
 * The user data source describes a single user in a tailnet
 */
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * The unique identifier for the user.
     */
    id?: pulumi.Input<string>;
    /**
     * The emailish login name of the user.
     */
    loginName?: pulumi.Input<string>;
}
