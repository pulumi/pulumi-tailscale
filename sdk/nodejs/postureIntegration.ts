// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The postureIntegration resource allows you to manage integrations with device posture data providers. See https://tailscale.com/kb/1288/device-posture for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tailscale from "@pulumi/tailscale";
 *
 * const samplePostureIntegration = new tailscale.PostureIntegration("sample_posture_integration", {
 *     postureProvider: "falcon",
 *     cloudId: "us-1",
 *     clientId: "clientid1",
 *     clientSecret: "test-secret1",
 * });
 * ```
 *
 * ## Import
 *
 * Posture integration can be imported using the posture integration id, e.g.,
 *
 * ```sh
 * $ pulumi import tailscale:index/postureIntegration:PostureIntegration sample_posture_integration 123456789
 * ```
 */
export class PostureIntegration extends pulumi.CustomResource {
    /**
     * Get an existing PostureIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PostureIntegrationState, opts?: pulumi.CustomResourceOptions): PostureIntegration {
        return new PostureIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tailscale:index/postureIntegration:PostureIntegration';

    /**
     * Returns true if the given object is an instance of PostureIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PostureIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PostureIntegration.__pulumiType;
    }

    /**
     * Unique identifier for your client.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * The secret (auth key, token, etc.) used to authenticate with the provider.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * Identifies which of the provider's clouds to integrate with.
     */
    public readonly cloudId!: pulumi.Output<string | undefined>;
    /**
     * The type of posture integration data provider.
     */
    public readonly postureProvider!: pulumi.Output<string>;
    /**
     * The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
     */
    public readonly tenantId!: pulumi.Output<string | undefined>;

    /**
     * Create a PostureIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostureIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PostureIntegrationArgs | PostureIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PostureIntegrationState | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["cloudId"] = state ? state.cloudId : undefined;
            resourceInputs["postureProvider"] = state ? state.postureProvider : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as PostureIntegrationArgs | undefined;
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.postureProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'postureProvider'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["cloudId"] = args ? args.cloudId : undefined;
            resourceInputs["postureProvider"] = args ? args.postureProvider : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PostureIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PostureIntegration resources.
 */
export interface PostureIntegrationState {
    /**
     * Unique identifier for your client.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The secret (auth key, token, etc.) used to authenticate with the provider.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Identifies which of the provider's clouds to integrate with.
     */
    cloudId?: pulumi.Input<string>;
    /**
     * The type of posture integration data provider.
     */
    postureProvider?: pulumi.Input<string>;
    /**
     * The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PostureIntegration resource.
 */
export interface PostureIntegrationArgs {
    /**
     * Unique identifier for your client.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The secret (auth key, token, etc.) used to authenticate with the provider.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Identifies which of the provider's clouds to integrate with.
     */
    cloudId?: pulumi.Input<string>;
    /**
     * The type of posture integration data provider.
     */
    postureProvider: pulumi.Input<string>;
    /**
     * The Microsoft Intune directory (tenant) ID. For other providers, this is left blank.
     */
    tenantId?: pulumi.Input<string>;
}
