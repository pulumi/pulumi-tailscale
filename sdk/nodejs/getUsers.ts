// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The users data source describes a list of users in a tailnet
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tailscale from "@pulumi/tailscale";
 *
 * const all-users = tailscale.getUsers({});
 * ```
 */
export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tailscale:index/getUsers:getUsers", {
        "role": args.role,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * Filters the users list to elements whose role is the provided value.
     */
    role?: string;
    /**
     * Filters the users list to elements whose type is the provided value.
     */
    type?: string;
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Filters the users list to elements whose role is the provided value.
     */
    readonly role?: string;
    /**
     * Filters the users list to elements whose type is the provided value.
     */
    readonly type?: string;
    /**
     * The list of users in the tailnet
     */
    readonly users: outputs.GetUsersUser[];
}
/**
 * The users data source describes a list of users in a tailnet
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tailscale from "@pulumi/tailscale";
 *
 * const all-users = tailscale.getUsers({});
 * ```
 */
export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(args).apply((a: any) => getUsers(a, opts))
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    /**
     * Filters the users list to elements whose role is the provided value.
     */
    role?: pulumi.Input<string>;
    /**
     * Filters the users list to elements whose type is the provided value.
     */
    type?: pulumi.Input<string>;
}
