// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The dnsNameservers resource allows you to configure DNS nameservers for your Tailscale network. See https://tailscale.com/kb/1054/dns for more information.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tailscale from "@pulumi/tailscale";
 *
 * const sampleSearchPaths = new tailscale.DnsSearchPaths("sampleSearchPaths", {searchPaths: ["example.com"]});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class DnsSearchPaths extends pulumi.CustomResource {
    /**
     * Get an existing DnsSearchPaths resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsSearchPathsState, opts?: pulumi.CustomResourceOptions): DnsSearchPaths {
        return new DnsSearchPaths(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tailscale:index/dnsSearchPaths:DnsSearchPaths';

    /**
     * Returns true if the given object is an instance of DnsSearchPaths.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsSearchPaths {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsSearchPaths.__pulumiType;
    }

    /**
     * Devices on your network will use these domain suffixes to resolve DNS names.
     */
    public readonly searchPaths!: pulumi.Output<string[]>;

    /**
     * Create a DnsSearchPaths resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsSearchPathsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsSearchPathsArgs | DnsSearchPathsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsSearchPathsState | undefined;
            resourceInputs["searchPaths"] = state ? state.searchPaths : undefined;
        } else {
            const args = argsOrState as DnsSearchPathsArgs | undefined;
            if ((!args || args.searchPaths === undefined) && !opts.urn) {
                throw new Error("Missing required property 'searchPaths'");
            }
            resourceInputs["searchPaths"] = args ? args.searchPaths : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsSearchPaths.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DnsSearchPaths resources.
 */
export interface DnsSearchPathsState {
    /**
     * Devices on your network will use these domain suffixes to resolve DNS names.
     */
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DnsSearchPaths resource.
 */
export interface DnsSearchPathsArgs {
    /**
     * Devices on your network will use these domain suffixes to resolve DNS names.
     */
    searchPaths: pulumi.Input<pulumi.Input<string>[]>;
}
