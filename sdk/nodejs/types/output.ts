// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ContactsAccount {
    /**
     * Email address to send communications to
     */
    email: string;
}

export interface ContactsSecurity {
    /**
     * Email address to send communications to
     */
    email: string;
}

export interface ContactsSupport {
    /**
     * Email address to send communications to
     */
    email: string;
}

export interface DnsConfigurationNameserver {
    /**
     * The nameserver's IPv4 or IPv6 address
     */
    address: string;
    /**
     * This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
     */
    useWithExitNode?: boolean;
}

export interface DnsConfigurationSplitDn {
    /**
     * The nameservers will be used only for this domain.
     */
    domain: string;
    /**
     * Set the nameservers used by devices on your network to resolve DNS queries.
     */
    nameservers: outputs.DnsConfigurationSplitDnNameserver[];
}

export interface DnsConfigurationSplitDnNameserver {
    /**
     * The nameserver's IPv4 or IPv6 address.
     */
    address: string;
    /**
     * This nameserver will continue to be used when an exit node is selected (requires Tailscale v1.88.1 or later). Defaults to false.
     */
    useWithExitNode?: boolean;
}

export interface GetDevicesDevice {
    /**
     * The list of device's IPs
     */
    addresses: string[];
    /**
     * The short hostname of the device
     */
    hostname: string;
    /**
     * The legacy identifier of the device. Use nodeId instead for new resources.
     */
    id: string;
    /**
     * The full name of the device (e.g. `hostname.domain.ts.net`)
     */
    name: string;
    /**
     * The preferred indentifier for a device.
     */
    nodeId: string;
    /**
     * The tags applied to the device
     */
    tags: string[];
    /**
     * The user associated with the device
     */
    user: string;
}

export interface GetUsersUser {
    /**
     * The time the user joined their tailnet.
     */
    created: string;
    /**
     * true when the user has a node currently connected to the control server.
     */
    currentlyConnected: boolean;
    /**
     * Number of devices the user owns.
     */
    deviceCount: number;
    /**
     * The name of the user.
     */
    displayName: string;
    /**
     * The unique identifier for the user.
     */
    id: string;
    /**
     * The later of either: a) The last time any of the user's nodes were connected to the network or b) The last time the user authenticated to any tailscale service, including the admin panel.
     */
    lastSeen: string;
    /**
     * The emailish login name of the user.
     */
    loginName: string;
    /**
     * The profile pic URL for the user.
     */
    profilePicUrl: string;
    /**
     * The role of the user.
     */
    role: string;
    /**
     * The status of the user.
     */
    status: string;
    /**
     * The tailnet that owns the user.
     */
    tailnetId: string;
    /**
     * The type of relation this user has to the tailnet associated with the request.
     */
    type: string;
}

