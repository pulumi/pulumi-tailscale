// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The webhook resource allows you to configure webhook endpoints for your Tailscale network. See https://tailscale.com/kb/1213/webhooks for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tailscale from "@pulumi/tailscale";
 *
 * const sampleWebhook = new tailscale.Webhook("sample_webhook", {
 *     endpointUrl: "https://example.com/webhook/endpoint",
 *     providerType: "slack",
 *     subscriptions: [
 *         "nodeCreated",
 *         "userDeleted",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Webhooks can be imported using the endpoint id, e.g.,
 *
 * ```sh
 * $ pulumi import tailscale:index/webhook:Webhook sample_webhook 123456789
 * ```
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tailscale:index/webhook:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * The endpoint to send webhook events to.
     */
    public readonly endpointUrl!: pulumi.Output<string>;
    /**
     * The provider type of the endpoint URL. Also referred to as the 'destination' for the webhook in the admin panel. Webhook event payloads are formatted according to the provider type if it is set to a known value. Must be one of `slack`, `mattermost`, `googlechat`, or `discord` if set.
     */
    public readonly providerType!: pulumi.Output<string | undefined>;
    /**
     * The secret used for signing webhook payloads. Only set on resource creation. See https://tailscale.com/kb/1213/webhooks#webhook-secret for more information.
     */
    public /*out*/ readonly secret!: pulumi.Output<string>;
    /**
     * The Tailscale events to subscribe this webhook to. See https://tailscale.com/kb/1213/webhooks#events for the list of valid events.
     */
    public readonly subscriptions!: pulumi.Output<string[]>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhookState | undefined;
            resourceInputs["endpointUrl"] = state ? state.endpointUrl : undefined;
            resourceInputs["providerType"] = state ? state.providerType : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["subscriptions"] = state ? state.subscriptions : undefined;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if ((!args || args.endpointUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointUrl'");
            }
            if ((!args || args.subscriptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptions'");
            }
            resourceInputs["endpointUrl"] = args ? args.endpointUrl : undefined;
            resourceInputs["providerType"] = args ? args.providerType : undefined;
            resourceInputs["subscriptions"] = args ? args.subscriptions : undefined;
            resourceInputs["secret"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Webhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * The endpoint to send webhook events to.
     */
    endpointUrl?: pulumi.Input<string>;
    /**
     * The provider type of the endpoint URL. Also referred to as the 'destination' for the webhook in the admin panel. Webhook event payloads are formatted according to the provider type if it is set to a known value. Must be one of `slack`, `mattermost`, `googlechat`, or `discord` if set.
     */
    providerType?: pulumi.Input<string>;
    /**
     * The secret used for signing webhook payloads. Only set on resource creation. See https://tailscale.com/kb/1213/webhooks#webhook-secret for more information.
     */
    secret?: pulumi.Input<string>;
    /**
     * The Tailscale events to subscribe this webhook to. See https://tailscale.com/kb/1213/webhooks#events for the list of valid events.
     */
    subscriptions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * The endpoint to send webhook events to.
     */
    endpointUrl: pulumi.Input<string>;
    /**
     * The provider type of the endpoint URL. Also referred to as the 'destination' for the webhook in the admin panel. Webhook event payloads are formatted according to the provider type if it is set to a known value. Must be one of `slack`, `mattermost`, `googlechat`, or `discord` if set.
     */
    providerType?: pulumi.Input<string>;
    /**
     * The Tailscale events to subscribe this webhook to. See https://tailscale.com/kb/1213/webhooks#events for the list of valid events.
     */
    subscriptions: pulumi.Input<pulumi.Input<string>[]>;
}
